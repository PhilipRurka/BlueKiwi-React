{"version":3,"sources":["helpers/colors.js","helpers/constants.js","components/Header/Header.js","components/Header/Header.container.js","components/BreadCrums/BreadCrums.js","components/Pages/Pages.js","components/Router/Router.js","components/Router/Router.container.js","redux/actions.js","components/Footer/Footer.js","components/App/App.js","redux/reducers.js","redux/store.js","redux/middleware.js","index.js"],"names":["COLORS","UPDATE_HISTORY","HeaderWrapper","NavBar","ImageWrapper","height","width","backgroundRepeat","backgroundSize","backgroundImage","process","cursor","NavItems","Label","targetLocation","currentPathname","fontSize","fontWeight","margin","textTransform","transition","color","marginLeft","goToPage","page","currentHistory","location","pathname","push","Header","className","onClick","connect","BreadCrums","Pages","history","match","routeOptions","Router","updateHistory","landingPage","discoverPage","watchListPage","basename","exact","path","component","props","to","dispatch","payload","type","Footer","GlobalWrapper","App","initialState","rootReducer","state","action","Object","assign","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0eeb158.chunk.js","sourcesContent":["export const COLORS = {\n  white                       : '#fff',\n  black                       : '#2F334A',\n  \n  // Site Colors\n  martinique                  : '#2f334a',\n  turquoise                   : '#2cddbb',\n  turquoiseThin               : '#21cead',\n  flamingo                    : '#ff8da6',\n  \n  brandColorText              : '#6250ff',\n  brandColorTextHover         : '#5645ec',\n  \n  // Gradient Composition\n  brandColorGradient1         : '#803FFB',\n  brandColorGradient2         : '#5A7FFB',\n  \n  // ELEMENTS: Secondary Text, Footer Text, Category Text, Price Text\n  blueHaze                    : '#B9B9D0', // Secondary Text Font Color. (Footer, Caterogy, Price)\n  \n  // ELEMENTS: Product background\n  athensGray                  : '#f4f3f8'\n}\n","/** Redux */\nexport const UPDATE_HISTORY = 'UPDATE_HISTORY';\n\n/** Routing */\nexport const LANDING_PAGE = '/';\nexport const DISCOVER_PAGE = '/discover';\nexport const WATCH_LIST_PAGE = '/watch-list';","import React from 'react';\nimport styled from '@emotion/styled/macro';\nimport { COLORS } from '../../helpers/colors';\nimport {\n  LANDING_PAGE,\n  DISCOVER_PAGE,\n  WATCH_LIST_PAGE\n} from '../../helpers/constants';\n\nconst HeaderWrapper = styled.header({\n  position: 'fixed',\n  top: '0',\n  left: '0',\n  zIndex: '5',\n  height: '80px',\n  width: '100vw',\n\n  '.container': {\n    position: 'relative',\n    height: '100%'\n  },\n  \n  '.content': {\n    position: 'absolute',\n    top: '50%',\n    left: '0',\n    transform: 'translateY(-50%)',\n    width: '100%',\n    padding: '0 15px'\n  }\n});\n\nconst NavBar = styled.div({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'space-between'\n});\n\nconst ImageWrapper = styled.div({\n  height: '25px',\n  width: '100px',\n  \n  '.image': {\n    height: '100%',\n    width: '100%',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    backgroundImage: `url(\"${process.env.PUBLIC_URL}/images/bluekiwi-tech-logo.svg\")`,\n    cursor: 'pointer'\n  }\n});\n\nconst NavItems = styled.div({\n  '.item': {\n\n  },\n\n});\n\nconst Label = styled.label(({ targetLocation, currentPathname }) => ({\n  fontSize: '14px',\n  fontWeight: '900',\n  margin: '0',\n  textTransform: 'uppercase',\n  cursor: 'pointer',\n  transition: 'color 0.2s ease',\n  color: (targetLocation && (process.env.PUBLIC_URL + targetLocation) === currentPathname)\n    ? COLORS.brandColorTextHover : 'black',\n\n  '&:hover': {\n    color: COLORS.brandColorTextHover\n  },\n\n  '& + label': {\n    marginLeft: '16px'\n  }\n}));\n\nconst goToPage = (page, currentHistory) => {\n  if(currentHistory.location.pathname === (page + process.env.PUBLIC_URL)) { return };\n\n  const test = process.env.PUBLIC_URL + page;\n\n  currentHistory.push(process.env.PUBLIC_URL + page);\n};\n\nconst Header = ({ currentHistory, currentPathname }) => {\n\n  return (\n    <HeaderWrapper>\n      <div className='container'>\n        <div className=\"content\">\n          <NavBar>\n            <ImageWrapper>\n              <div\n                className=\"image\"\n                onClick={() => (goToPage(LANDING_PAGE, currentHistory))} />\n            </ImageWrapper>\n\n            <NavItems>\n              <div className=\"item\">\n                <Label\n                  onClick={() => (goToPage(DISCOVER_PAGE, currentHistory))}\n                  currentPathname={currentPathname}\n                  targetLocation={DISCOVER_PAGE} >\n                  Discover\n                </Label>\n                <Label\n                  onClick={() => (goToPage(WATCH_LIST_PAGE, currentHistory))}\n                  currentPathname={currentPathname}\n                  targetLocation={WATCH_LIST_PAGE} >\n                  Watchlist\n                </Label>\n              </div>\n            </NavItems>\n          </NavBar>\n        </div>\n      </div>\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;","import Header from './Header';\nimport { connect } from 'react-redux';\n\nconst mapToStateToProps = ({\n  currentHistory,\n  currentPathname\n}) => ({\n  currentHistory,\n  currentPathname\n});\n\nexport default connect(\n  mapToStateToProps\n  ) ( Header);","import React from 'react';\nimport styled from '@emotion/styled/macro';\n\nconst BreadCrums = () => {\n\n  return (\n    <div>\n\n    </div>\n  );\n};\n\nexport default BreadCrums;","import React from 'react';\nimport styled from '@emotion/styled/macro';\nimport BreadCrums from '../BreadCrums';\n\nconst Pages = ({ history, location, match, page }) => {\n\n\n  return (\n    <>\n      <BreadCrums />\n      <div>\n\n      </div>\n      </>\n  );\n};\n\nexport default Pages;","import React from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport {\n  LANDING_PAGE,\n  DISCOVER_PAGE,\n  WATCH_LIST_PAGE\n} from '../../helpers/constants';\nimport Pages from '../Pages';\n\nconst routeOptions = {\n  landingPage: LANDING_PAGE,\n  discoverPage: DISCOVER_PAGE,\n  watchListPage: WATCH_LIST_PAGE\n};\n\nconst Router = ({ updateHistory }) => {\n  const {\n    landingPage,\n    discoverPage,\n    watchListPage\n  } = routeOptions;\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n      <Switch>\n        <Route\n          exact\n          path={landingPage}\n          component={(props) => {\n            updateHistory(props.history);\n            return <Pages {...props} page={LANDING_PAGE} /> }\n          } />\n        <Route\n          path={watchListPage}\n          component={(props) => {\n            updateHistory(props.history);\n            return <Pages {...props} page={DISCOVER_PAGE} /> }\n          } />\n        <Route\n          path={discoverPage}\n          component={(props) => {\n            updateHistory(props.history);\n            return <Pages {...props} page={WATCH_LIST_PAGE} /> }\n          } />\n        <Redirect\n          to={landingPage}\n          component={(props) => (\n            <Pages {...props}\n              page={LANDING_PAGE} />\n          )} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;","import Router from './Router';\nimport { connect } from 'react-redux';\nimport { updateHistory } from '../../redux/actions';\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateHistory: (payload) => dispatch(updateHistory(payload))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n) (Router);","import {\n  UPDATE_HISTORY\n} from '../helpers/constants';\n\nexport function updateHistory(payload) {\n  return { type: UPDATE_HISTORY, payload };\n};","import React from 'react';\nimport styled from '@emotion/styled/macro';\n\nconst Footer = () => {\n\n  return (\n    <div>\n\n    </div>\n  );\n};\n\nexport default Footer;","import React from 'react';\nimport styled from '@emotion/styled/macro';\nimport Header from '../Header';\nimport Router from '../Router';\nimport Footer from '../Footer';\n\nconst GlobalWrapper = styled.div({\n  '*': {\n    '-webkitFontSmoothing' : 'antialiased',\n    '-mozOsxFontSmoothing': 'grayscale',\n    fontFamily: '\"Roboto\", sans-serif',\n    letterSpacing: '0.5px'\n  },\n\n  'h1, h2, h3, h4, h5, label': {\n    fontFamily: '\"Nunito\", sans-serif'\n  }\n});\n\nconst App = () => (\n  <GlobalWrapper>\n    <Header />\n    <Router />\n    <Footer />\n  </GlobalWrapper>\n);\n\nexport default App;","import {\n  UPDATE_HISTORY\n} from '../helpers/constants';\n\nconst initialState = {\n  currentHistory: {},\n  currentPathname: ''\n};\n\nfunction rootReducer(state = initialState, action) {\n  const { type, payload } = action;\n  \n  if(type === UPDATE_HISTORY) {\n    return Object.assign({}, state, {\n      currentHistory: payload,\n      currentPathname: payload.location.pathname\n    });\n  };\n\n  return state;\n};\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { middleware } from './middleware';\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  storeEnhancers(applyMiddleware(middleware, thunk))\n);\n\nexport default store;","export function middleware() {\n  return function(next) {\n    return function(action) {\n\n      // if() {\n\n      // }\n\n      return next(action);\n    };\n  };\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/normalizer.scss';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}